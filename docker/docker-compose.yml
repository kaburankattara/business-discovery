version: "3"

networks:
  some-network:

services:
#  app:
#    build: ./build
#    container_name: app
#    depends_on:
#      - cassandra1
#      - cassandra2
#    networks:
#      - some-network
#    ports:
#      - 8080:80
#    privileged: true
#    environment:
#      JAVA_HOME: /usr/local/java
#      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/java/bin
#    volumes:
#      - ./volumes/app/opt:/opt
#      - ./volumes/app/tmp:/tmp
#      - ../build:/opt/java
#      - /sys/fs/cgroup:/sys/fs/cgroup:rw
#    working_dir: /root
#    entrypoint: >
#      bash -c "
#        sh /tmp/container-init.sh &&
#        tail -f /dev/null
#      "

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=my-secret-pw
    volumes:
      - ./volumes/mysql/datadir:/var/lib/mysql
      - ./volumes/mysql/initdb.d:/docker-entrypoint-initdb.d

  cassandra1:
    image: cassandra:latest
    container_name: cassandra1
    networks:
      - some-network
    ports:
      - 9042:9042
    environment:
      CASSANDRA_SEEDS: cassandra1, cassandra2
      CASSANDRA_CLUSTER_NAME: business-discovery-cluster
    volumes:
      - ./volumes/cassandra1/datadir:/var/lib/cassandra
    restart: always

  cassandra2:
    image: cassandra:latest
    container_name: cassandra2
    networks:
      - some-network
    environment:
      CASSANDRA_SEEDS: cassandra1, cassandra2
      CASSANDRA_CLUSTER_NAME: business-discovery-cluster
    volumes:
      - ./volumes/cassandra2/datadir:/var/lib/cassandra
    restart: always

  cassandra-for-setup:
    image: cassandra:latest
    container_name: cassandra-for-setup
    depends_on:
      - cassandra1
      - cassandra2
    networks:
      - some-network
    volumes:
      - ./volumes/cassandra-for-setup/tmp:/tmp
    working_dir: /root
    restart: always
    entrypoint: >
      bash -c "
        sh /tmp/container-init.sh &&
        tail -f /dev/null
      "

